@page "/battery"
@rendermode InteractiveServer
@attribute [StreamRendering]
@using SimpleMqtt

<h3>Battery Percentage</h3>
<p>Batterij: @DisplayBatteryStatus</p>

@code {
    private string BatteryDisplay { get; set; } = string.Empty;

    private string DisplayBatteryStatus => 
        string.IsNullOrEmpty(BatteryDisplay) ? "Wachten op batterijdata..." : $"{BatteryDisplay}%";

    protected override async Task OnInitializedAsync()
    {
        var client = SimpleMqttClient.CreateSimpleMqttClientForHiveMQ("client-Id");
        Console.WriteLine("Starting MQTT Client...");

        // Om te kijken of het bericht goed binnenkomt
        client.OnMessageReceived += async (sender, args) =>
        {
            await InvokeAsync(() =>
            {
                // Eerst naar console
                Console.WriteLine($"[MQTT Received] Topic: {args.Topic}, Message: {args.Message}");

                
                if (args.Topic == "sensordata")
                {
                    BatteryDisplay = args.Message;
                    StateHasChanged(); // Update de UI
                }
            });
        };

        // Abonneer op het topic "BatteryPercentage"
        await client.SubscribeToTopic("sensordata");
    }
}
