@page "/"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<h3>Log in</h3>

<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-container">
        <div class="form-group">
            <label for="inputNaam">Naam</label>
            <InputText type="text" class="form-control" id="inputNaam" aria-describedby="emailHelp" @bind-Value="@model.Naam" />
            <ValidationMessage For="@(() => model.Naam)" />
        </div>
        <div class="form-group">
            <label for="inputLeeftijd">Leeftijd</label>
            <InputNumber type="number" class="form-control" id="inputLeeftijd" @bind-Value="@model.Leeftijd" />
            <ValidationMessage For="@(() => model.Leeftijd)" />
        </div>
        <div class="form-check">
            <InputCheckbox type="checkbox" id="isActief" class="form-check-input" @bind-Value="@model.IsActief"/>
            <label class="form-check-label" for="isActief">User actief</label>
            <ValidationMessage For="@(() => model.IsActief)" />
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Gebruiker opslaan</button>
        </div>
    </div>
</EditForm>

@if(isSubmitted)
{
    <div class="alert alert-success mt-2" role="alert">
        Gebruiker opgeslagen
    </div>
}

@code {

    private bool isSubmitted = false;

    private UserFormModel model = new UserFormModel();
    
    private void HandleValidSubmit()
    {
        Console.WriteLine($"Form data incoming for {model.Naam}");
        isSubmitted = true;
    }

    protected override async Task OnInitializedAsync()
    {
        // Load data from your repository
    }

    public class UserFormModel
    {
        [Required(ErrorMessage = "Naam is verplicht")]
        public string? Naam { get; set; }

        [Range(18,100, ErrorMessage = "Leeftijd moet tussen de 18 en 100 zijn")]
        public int Leeftijd { get; set; }
        public bool IsActief { get; set; }
    }
}

<!-- CSS -->
<style>
    /* Algemene pagina stijl */
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
        color: #333;
    }

    h3 {
        text-align: center;
        font-size: 28px;
        color: #333;
        font-weight: 600;
        margin-top: 30px;
    }

    /* Formulier container */
    .form-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        margin-top: 30px;
        padding: 30px 20px;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        width: 60%;
        max-width: 800px;
        margin: 0 auto;
    }

    /* Stijl voor form-groepen */
    .form-group {
        width: 100%;
    }

    .form-group label {
        font-weight: 500;
        color: #555;
    }

    .form-group input, .form-check {
        width: 100%;
    }

    .form-check {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }

    .alert {
        max-width: 600px;
        margin: 20px auto;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        background-color: #28a745;
        color: white;
    }

</style>
